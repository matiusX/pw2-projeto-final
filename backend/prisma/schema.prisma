// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x"]
}

model Produto {
  id String @id @default(uuid()) @db.Char(40)
  nome String @unique @db.VarChar(100)
  preco Decimal @db.Decimal(10,0)
  estoque Int @db.Int
  comprasProduto CompraProduto[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("produtos")
}

model Usuario {
  id String @id @default(uuid()) @db.Char(40)
  nome String @db.VarChar(100)
  email String @unique @db.VarChar(100)
  senha String @db.VarChar(100)
  tipoUsuario TipoUsuario @relation(fields: [tipoUsuarioId], references: [id])
  tipoUsuarioId String
  compras Compra[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("usuarios")
}

model TipoUsuario {
  id String @id @default(uuid()) @db.Char(40)
  rotulo String @unique @db.VarChar(10)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  usuarios Usuario[]

  @@map("tipos_usuarios")
}

model Compra {
  id             String          @id @default(uuid()) @db.Char(40)
  usuarioId      String          @db.Char(40)
  usuario        Usuario         @relation(fields: [usuarioId], references: [id])
  carrinho       CompraProduto[]
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")

  @@map("compras")
}

model CompraProduto {
  id         String   @id @default(uuid()) @db.Char(40)
  compraId   String   @db.Char(40)
  compra     Compra   @relation(fields: [compraId], references: [id])
  produtoId  String   @db.Char(40)
  produto    Produto  @relation(fields: [produtoId], references: [id])
  quantidade Int      @db.Int
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("compras_produtos")
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}